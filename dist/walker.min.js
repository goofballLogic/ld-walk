const t={walk(t,e={}){const n=e.jsonld,r=e["ld-query"];return{pathContext:t,from:function(t,e){return{pathContext:t,walkFrom:e,to:(i,l)=>async function t({pathContext:e,walkFrom:i,walkTo:l,lastFetched:c,query:s,suppressFinalDereferencing:u}){Array.isArray(l)||(l=(l||"").split(" "));const d=await async function(t,e){const r={"@context":[t,{"http://__ldwalk/term":{"@type":"@vocab"}}],"@graph":e.map((function(t){let e=function(t){if(!t||!t.startsWith("query["))return;if(!t.endsWith("]"))return;return{"http://__ldwalk/query":t.substring(6,t.length-1)}}(t);return e||{"http://__ldwalk/term":t}}))},a=await n.expand(r),o=a.length>1,i=await n.compact(a,{"@context":{"@vocab":"http://__ldwalk/",term:{"@id":"http://__ldwalk/term","@type":"@id"}}});return o?i["@graph"]:(delete i["@context"],[i])}(e,l);c||(s=await o(i),c=i);let h=0;for(;s&&s.query&&d.length;){const t=d.shift();let n;if(h++,"term"in t){const e=`> ${t.term}`;if(n=s.query(e),!n){const t=s.query("> @id");if(t){c=t;const r=await o(t);n=r&&r.query(e)}}}else{if(!("query"in t))throw new Error("Unhandled step: "+JSON.stringify(t));{const o=r(s.json(),e).query(t.query),i=o&&o.parent();n=i&&a(i.json())}}s=n}if(!u&&s&&s.query){const t=s.query("> @id");t&&t!==c&&(s=await o(t)||s)}const p={walked:l.slice(0,h),toQuery:t=>s&&r(s.json(),t||{}),continueTo:(n,r)=>s?t({...r,pathContext:e,walkTo:n,lastFetched:c,query:s}):p,succeeded:!!s};p.succeeded||(p.notWalked=l.slice(h));return p}({...l,pathContext:t,walkFrom:e,walkTo:i})}}.bind(this,t)};function a(t){return r(t,{})}async function o(t){try{return a(await n.expand(t))}catch(t){if(t.details&&"loading document failed"==t.details.code)return null;throw t}}}};export default t;
//# sourceMappingURL=walker.min.js.map
